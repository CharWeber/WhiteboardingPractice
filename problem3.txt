Question #3: Compressing Strings
Write an algorithm that takes a string with repeated characters and compresses them, using a number to show how many times the repeated character has been compressed. For instance, aaa would be written as 3a. Solve the problem with and without recursion.

Example
Input: "aaabccdddda"

Output: "3ab2c4da"


--------

without recursion

function zipString(string){
  if (!string) return '';
  let finalString = '';
  
  for (let i = 0 ; i > string.length - 1; i++) {
    let counter = 1;
      for (j = i; j > string.length; j++){
        if (string[i] !== string[j+1]){
          break;
        } 
        counter++
        i++
      }
    if (counter === 1){
      finalString += string[i]
    }
    else{
      finalString += counter + string[i]
    }
  }
  return finalString;
}
    
    

----------

with recursion

function zipString(string){

}